{"version":3,"sources":["images/logo.png","components/Navigation.js","components/Profile.js","components/Projects.js","components/Abilities.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","renderTooltip","props","Tooltip","id","Navigation","Navbar","Brand","href","src","logo","alt","width","height","Toggle","Collapse","className","Text","OverlayTrigger","placement","delay","show","hide","overlay","target","rel","Button","variant","Profile","Jumbotron","fluid","style","background","Container","Projects","Tab","defaultActiveKey","Row","Col","sm","ListGroup","Item","action","Content","textAlign","Pane","eventKey","noBullets","paddingLeft","marginTop","listStyleType","Abilities","icon","faLaptopCode","faDatabase","faGlobe","faScroll","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f5e7c14a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b262adb0.png\";","import React from 'react';\nimport { Navbar, OverlayTrigger, Tooltip, Button} from 'react-bootstrap';\nimport logo from '../images/logo.png'\nfunction renderTooltip(props) {\n    return (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        saurabh@khatiwada.dev\n      </Tooltip>\n    );\n}\n\nexport default function Navigation() {\n    return (\n        <div>\n            <Navbar>\n                <Navbar.Brand href=\"#home\">\n                    <img src={logo} alt=\"SK Logo\" width='36' height='36' />\n                    &nbsp; &nbsp;khatiwada.dev\n                    </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                    <OverlayTrigger\n                            placement=\"right\"\n                            delay={{ show: 250, hide: 400 }}\n                            overlay={renderTooltip}>\n                            <a href=\"mailto:saurabh@khatiwada.dev\" target=\"_blank\" rel=\"noopener noreferrer\"><Button variant=\"outline-success\">Email</Button></a>\n                        </OverlayTrigger>\n                        &nbsp;&nbsp;&nbsp;\n                        <a href=\"https://www.linkedin.com/in/saurabhkhatiwada/\" target=\"_blank\" rel=\"noopener noreferrer\" >LinkedIn</a>\n                        &nbsp;&nbsp;&nbsp;\n                        <a href=\"https://github.com/skhati1/\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nexport default function Profile() {\n    return (\n        <div>\n            <Jumbotron fluid style={{background: 'none'}}>\n                <Container>\n                    <h1>Saurabh Khatiwada</h1>\n                    <span>\n                    A Full Stack Software Engineer with a keen eye for effective software architecture and developer process improvement. \n                    </span>\n                </Container>\n            </Jumbotron>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Tab, ListGroup, Row, Col } from 'react-bootstrap';\nimport {Button} from 'react-bootstrap';\n\nexport default function Projects() {\n    const contentTextAlign = {\n        textAlign: 'left'\n    }\n    return (\n        <div>\n            <h4>Projects</h4>\n            <hr />\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#bbbautoschool\">\n                <Row>\n                    <Col sm={4}>\n                        <ListGroup>\n                            <ListGroup.Item action href=\"#bbbautoschool\">\n                                BBB Auto School\n                            </ListGroup.Item>\n                            <ListGroup.Item action href=\"#helloCloud\">\n                                Hello Cloud\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col sm={8}>\n                        <Tab.Content style={contentTextAlign}>\n                            <Tab.Pane eventKey=\"#bbbautoschool\">\n                                <p>A simple ReactJS driven SPA (using\n                                <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">&nbsp;GatsbyJs&nbsp;</a>) \n                                created for a driving school in Taunton, MA.</p>\n                                <a href=\"https://github.com/skhati1/bbbautoschool\"><Button variant=\"outline-info\">Source Code</Button></a>\n                                &emsp;\n                                <a href=\"https://www.bbbautoschool.com/\"><Button variant=\"outline-info\">Live Demo</Button></a>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"#helloCloud\">\n                                <p>A hands-on workshop designed for students of Towson University, along with <a href=\"https://www.codebyalex.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Wilson</a>, about the basics of cloud development using AWS with an emphasis on development in conjunction with DevOps.</p>\n                                <a href=\"https://github.com/CodeByAlex/HelloCloud\"><Button variant=\"outline-info\">Starter Code</Button></a>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n            <hr />\n        </div>\n    );\n}\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDatabase, faGlobe, faLaptopCode, faScroll } from '@fortawesome/free-solid-svg-icons';\n\nconst noBullets = {\n    textAlign: 'left',\n    paddingLeft: '40%',\n    marginTop: '20px',\n    listStyleType: 'circle'\n}\nexport default function Abilities() {\n    return (\n        <div>\n            <h4>Abilities</h4>\n            <br />\n            <Container>\n                <Row>\n                    <Col sm>\n                        <h1><FontAwesomeIcon icon={faLaptopCode} /></h1>\n                        <ul style={noBullets}>\n                            <li>.NET Core (C#)</li>\n                            <li>Node JS</li>\n                            <li>Java</li>\n                            <li>Python</li>\n                        </ul>\n                    </Col>\n                    <Col sm>\n                        <h1><FontAwesomeIcon icon={faDatabase} /></h1>\n                        <ul style={noBullets}>\n                            <li>Microsoft SQL Server</li>\n                            <li>PostgreSQL</li>\n                        </ul>\n                    </Col>\n                    <Col sm>\n                        <h1><FontAwesomeIcon icon={faGlobe} /></h1>\n                        <ul style={noBullets}>\n                            <li>ReactJs</li>\n                            <li>HTML5</li>\n                            <li>CSS3</li>\n                        </ul>\n                    </Col>\n                    <Col sm>\n                        <h1><FontAwesomeIcon icon={faScroll} /></h1>\n                        <ul style={noBullets}>\n                            <li>Bash</li>\n                            <li>Powershell</li>\n                        </ul>\n                    </Col>\n                </Row>\n\n            </Container>\n        </div >\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport {Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/Navigation';\nimport Profile from './components/Profile';\nimport Projects from './components/Projects';\nimport Abilities from './components/Abilities';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col sm>\n            <Navigation />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm>\n            <Profile />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm>\n            <Projects />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm>\n            <Abilities />            \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}